language: cpp

env:
  global:
    # https://chromium.googlesource.com/chromium/buildtools/+/e6b510a9daf822bbe9f922c200c58150803d2fd8
    - GN_LNX64_SHA1: a452edf26a551fef8a884496d143b7e56cbe2ad9
    - GN_MAC_SHA1: 8185d63f0055bb02d46d22a450131b74b22e13ba

addons:
  apt:
    sources: &sources
      # this is needed for gcc and clang
      - ubuntu-toolchain-r-test
    packages: &packages
      - ninja-build

matrix:
  include:
    - compiler: gcc
      os: linux
      env: GN_ARGS='gcc_cc="gcc-4.9" gcc_cxx="g++-4.9" is_clang=false'
      addons: &gcc_addons
        apt:
          sources:
            - *sources
          packages:
            - g++-4.9
            - *packages

    - compiler: gcc
      os: linux
      env: GN_ARGS='gcc_cc="gcc-4.9" gcc_cxx="g++-4.9" is_clang=false is_debug=false'
      addons: *gcc_addons

    - compiler: gcc
      os: linux
      env: GN_ARGS='gcc_cc="gcc-4.9" gcc_cxx="g++-4.9" is_clang=false is_official_build=true'
      addons: *gcc_addons

    - compiler: clang
      os: linux
      env: GN_ARGS='clang_cc="clang-3.8" clang_cxx="clang++-3.8" is_clang=true'
      addons: &clang_addons
        apt:
          sources:
            - llvm-toolchain-precise-3.8
            - *sources
          packages:
            - clang-3.8
            - *packages

    - compiler: clang
      os: linux
      env: GN_ARGS='clang_cc="clang-3.8" clang_cxx="clang++-3.8" is_clang=true is_debug=false'
      addons: *clang_addons

    - compiler: clang
      os: linux
      env: GN_ARGS='clang_cc="clang-3.8" clang_cxx="clang++-3.8" is_clang=true is_official_build=true'
      addons: *clang_addons

    - compiler: clang
      os: osx
      env: GN_ARGS='is_clang=true is_official_build=true'

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export GN_SHA1="$GN_LNX64_SHA1"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export GN_SHA1="$GN_MAC_SHA1"; brew install ninja; fi
  - echo $GN_SHA1

script:
  - python gn_helpers_unittest.py
  - travis_retry wget --no-check-certificate --quiet -O gn https://storage.googleapis.com/chromium-gn/$GN_SHA1
  - chmod +x gn
  - git clone --branch=testsrc https://github.com/timniederhausen/gn-build.git testsrc
  - mkdir testsrc/build
  - mv config testsrc/build/
  - mv toolchain testsrc/build/
  - ./gn gen out --args="$GN_ARGS" --root=testsrc
  - cat out/args.gn
  - ninja -C out
  - cd out &&  ./hello
